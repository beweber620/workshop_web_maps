[["index.html", "Building Web Maps with Leaflet Overview 0.1 Description", " Building Web Maps with Leaflet Dr.Â Michele Tobias 2021-10-21 Overview 0.1 Description In this workshop, attendees will be introduced to building an interactive web map to display spatial data using the Leaflet javascript library. 0.1.1 Learning Objectives In this workshop, attendees will learn Introductory HTML skills, in particular, the tags that are most commonly used to format text on a webpage How to load javascript libraries into a web page An introduction to the Leaflet javascript library Where to get additional help with HTML and Leaflet Best practices for communicating data distributions with a web map 0.1.2 Skills In this workshop, participants will be introduced to the following skills: HTML Javascript Leaflet Javascript Library 0.1.3 Prerequisites Learners should have a basic understanding of spatial data formats such as vector and raster data, as well as experience with any coding language. Learners with previous experience with coding in HTML and javascript will have an easier time learning, but these skills are not required. 0.1.4 Software &amp; Tools: Text editor (preferably with syntax highlighting) Web browser (not Internet Explorer) "],["introduction.html", "1 Introduction 1.1 What is a Web Map? 1.2 Why make a web map? 1.3 Examples 1.4 Workflow 1.5 Leaflet", " 1 Introduction 1.1 What is a Web Map? The term web map typically refers to a map embedded in a webpage. The map allows the user to interact with the data in some way. Often, the user can pan and zoom to adjust the view and click on data markers to learn more information about a location. 1.2 Why make a web map? Web maps can be a powerful way to share spatial information with other people, especially when you expect the viewer to want to explore the data in different ways. Web maps allow the user to customize their experience in ways that a static map cannot. Web maps can also be a more engaging way for your audience to learn about a topic of interest. Web maps can also be a way to interact with a community of interest, enabling a reasearcher to both share and collect spatial information from a community. 1.3 Examples THIS NEEDS UPDATING 1.4 Workflow To make an online interactive web map, well need to complete several steps. Typically these are: Make a webpage to contain the web map code Write the web map code and put it into the webpage Put the web page online 1.5 Leaflet In todays workshop, well be using a javascript library called Leaflet to write the code that will make our web map. Leaflet is a popular open source javascript library specifically designed to build interactive web maps with a combination of data available online (like tile services for basemaps) and your own data. Leaflet is well-documented and has excellent tutorials to illustrate common tasks and innovative uses of the tool. In addition, there is an active community using this tool so there is ample support on online message boards and social media outlets. "],["setting-up-your-file-structure.html", "2 Setting Up Your File Structure 2.1 Download the Data 2.2 Folders 2.3 Files", " 2 Setting Up Your File Structure Before we do any coding, lets set up our file and folder structure. 2.1 Download the Data THIS NEEDS UPDATING 2.2 Folders Using your computers file browsing program, navigate to a folder you want to work in. In that folder, create a new folder to hold your files for this project, such as my_web_map. Inside that folder, create another folder called docs. docs will hold the HTML and javascript files that will create our web map. Your folder structure should now look like this: my_web_map |-- docs 2.3 Files Move the data you downloaded for this workshop called campus_cats.js into the data folder. Open your preferred text editor application. Create a new, blank file. Save it inside your docs folder and call it index.html. This will be the homepage for our web site that will hold our web map. Your folder and file structure should now look like this: my_web_map |-- docs | |-- campus_cats.js | |-- index.htm "],["build-a-webpage.html", "3 Build a Webpage 3.1 Intro to HTML 3.2 Start Building your Webpage", " 3 Build a Webpage The first step in building a web map is to make a basic webpage to house our map. It doesnt need to be elaborate to get started, but we do need to understand some concepts. 3.1 Intro to HTML HTML stands for hypertext markup language. If youve ever used R Markdown or GitHub Markdown or worked in a Jupiter Notebook, youll notice some similarities. The key thing to understand about HTML is that every element (text, code, images, etc.) you put into your code needs to be labeled to tell the web browser how to render that element. We label the elements with a tag. We label the start of an element with an opening tag, such as &lt;p&gt; to start a paragraph, and end it with a closing tag, such as &lt;/p&gt;. Some tags are special and dont need to be closed, such as a line break &lt;br&gt;, but those are rare. There are tags for many types of elements. W3Schools lists them alphabetically in their HTML Element Reference. Well learn a few of the common tags as we build our webpage. 3.2 Start Building your Webpage Open the index.html file (its in the docs folder) in a text editor. Using a text editor with syntax highlighting can be helpful, but isnt mandatory. The first, we need to indicate that our text file contains HTML, and then place opening and closing tags to indicate which part of the document contains HTML. Well write our webpage code between those HTML tags. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;/html&gt; Weve made a blank webpage! Now, lets add something more interesting to it. The beginning of the HTML document is where you normally place the parameters and settings that make the webpage work. Well add a section called head to our page to contain some of these parameters. Inside of our head section, well indicate the title of our webpage, wrapped in &lt;title&gt; tags. This puts the name of the webpage in the tab at the top of the browser. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;UC Davis Campus Cats Map&lt;/title&gt; &lt;/head&gt; &lt;/html&gt; If you open your index.html file in your web browser, youll have a blank page with a tab called UC Davis Campus Cats Map. The body section of a web page contains the code that appears on the actual web page. Well add a body section and some information. Note that &lt;h1&gt; makes a heading and &lt;p&gt; makes a paragraph. &lt;html&gt; &lt;head&gt; &lt;title&gt;UC Davis Campus Cats Map&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;UC Davis Campus Cats Map&lt;/h1&gt; &lt;p&gt;This webmap shows the locations of UC Davis campus community cats.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Reload your index.html document in your browser to see your new text. You have now written a short but very legitimate HTML webpage! We could certainly write more text, but for the sake of demonstration, well keep it short for now. "],["build-a-leaflet-web-map.html", "4 Build a Leaflet Web Map 4.1 Prepare Your Page 4.2 Add A Map", " 4 Build a Leaflet Web Map Now that weve made a basic webpage, we can add our web map. 4.1 Prepare Your Page 4.1.1 Load The External Files In the head section of our webpage, we need to add some information that will tell our map how to appear (the CSS file) and where to find the Leaflet package (Leaflet JavaScript file). CSS stands for Cascading Style Sheet. You can think of this as the parameters that set the way certain objects are displayed in a website. The file well load specifically styles the map elements made with Leaflet. Loading the Leaflet JavaScript file enables our webpage to have access to the functions and tools in the Leaflet Library. For R or Python users, this is similar to loading packages or libraries in your code. We could save a static version of this library in our website folders and point to that, or we can link to an online version of it, like we have done in the code below. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;UC Davis Campus Cats Map&lt;/title&gt; &lt;!--Load the Leaflet CSS file --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/leaflet@1.7.1/dist/leaflet.css&quot; integrity=&quot;sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==&quot;crossorigin=&quot;&quot;/&gt; &lt;!--Load the Leaflet JavaScript file --&gt; &lt;script src=&quot;https://unpkg.com/leaflet@1.7.1/dist/leaflet.js&quot; integrity=&quot;sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==&quot;crossorigin=&quot;&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;UC Davis Campus Cats Map&lt;/h1&gt; &lt;p&gt;This webmap shows the locations of UC Davis campus community cats.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Note that in HTML, comments are written like this: &lt;!-- This is a comment --&gt;. Comments are information for the coder and dont render on the website. 4.1.2 Add a Map Div A &lt;div&gt; element defines a section in your HTML document. Our web map needs its own &lt;div&gt;. Well add one inside the &lt;body&gt; of the webpage. Note that the &lt;div&gt; has an ID. This will let us create settings and code that apply to this specific &lt;div&gt;. We can define the style of the &lt;div&gt; inside the tag (as we have done below) or we could do it in the &lt;head&gt; of the document in a &lt;style&gt; subsection, or in a separate CSS file. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;UC Davis Campus Cats Map&lt;/title&gt; &lt;!--Load the Leaflet CSS file --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/leaflet@1.7.1/dist/leaflet.css&quot; integrity=&quot;sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==&quot;crossorigin=&quot;&quot;/&gt; &lt;!--Load the Leaflet JavaScript file --&gt; &lt;script src=&quot;https://unpkg.com/leaflet@1.7.1/dist/leaflet.js&quot; integrity=&quot;sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==&quot;crossorigin=&quot;&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;UC Davis Campus Cats Map&lt;/h1&gt; &lt;p&gt;This webmap shows the locations of UC Davis campus community cats.&lt;/p&gt; &lt;div id=&quot;mapid&quot; style=&quot;width: 600px; height: 400px;&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; If you reload your index.html file in your browser, you shouldnt notice any difference. If the page doesnt load, however, youll need to troubleshoot your code. Make sure your tags open and close in the right order. 4.1.3 Add a Script Section Finally, we need to add a section to our code to hold the Leaflet JavaScript code we will write to make our map. Just below your map &lt;div&gt; (and inside the body section), add open and closed &lt;script&gt; tags. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;UC Davis Campus Cats Map&lt;/title&gt; &lt;!--Load the Leaflet CSS file --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/leaflet@1.7.1/dist/leaflet.css&quot; integrity=&quot;sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==&quot;crossorigin=&quot;&quot;/&gt; &lt;!--Load the Leaflet JavaScript file --&gt; &lt;script src=&quot;https://unpkg.com/leaflet@1.7.1/dist/leaflet.js&quot; integrity=&quot;sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==&quot;crossorigin=&quot;&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;UC Davis Campus Cats Map&lt;/h1&gt; &lt;p&gt;This webmap shows the locations of UC Davis campus community cats.&lt;/p&gt; &lt;div id=&quot;mapid&quot; style=&quot;width: 600px; height: 400px;&quot;&gt;&lt;/div&gt; &lt;script&gt; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 4.2 Add A Map Now were ready to add a map. Well make a simple one to start and add more data later. Note: from now on, well be working in the &lt;script&gt; section, so the code will just show this section to avoid clutter and focus on whats changing in the code. Inside the &lt;script&gt; section, well now be writing JavaScript. // is how you indicate a comment in JavaScript. Outside of this section, youll be writing HTML. It can get confusing sometimes, so have patience with yourself. First, well create an empty map in our mapid div, then well load Stamens Toner tile service to use as a background layer. The limited color palette of the Toner tile service will make it easier to see the data well be loading later. &lt;script&gt; //add an empty map called &quot;catmap&quot; to the page in the mapid div var catmap = L.map(&#39;mapid&#39;, { center: [38.538592, -121.75], zoom: 15 }); //add the base map = Stamen Toner tile layer var Stamen_Toner = L.tileLayer(&#39;https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.{ext}&#39;, { attribution: &#39;Map tiles by &lt;a href=&quot;http://stamen.com&quot;&gt;Stamen Design&lt;/a&gt;, &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0&quot;&gt;CC BY 3.0&lt;/a&gt; &amp;mdash; Map data &amp;copy; &lt;a href=&quot;http://www.openstreetmap.org/copyright&quot;&gt;OpenStreetMap&lt;/a&gt;&#39;, subdomains: &#39;abcd&#39;, minZoom: 0, maxZoom: 20, ext: &#39;png&#39; }); catmap.addLayer(Stamen_Toner); &lt;/script&gt; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
